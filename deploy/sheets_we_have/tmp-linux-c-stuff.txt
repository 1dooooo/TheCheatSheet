systemctl 编写服务单元文件 - systemctl --user edit --full --force xxx.service, full表示覆盖已有，force强制创建, user表示对用户使用。之后 daemon-reload, enable start即可
nc -v 192.168.79.254 8000 - 查看端口是否开放
tcpdump -s 0 -X 'tcp dst port 8000' - 查看某个端口流量情况
wget  ifconfig.me - 查看公网ip
dmidecode -t 0 - 查看系统 bios 信息
ps aux|grep python|grep -v grep|cut -c 9-15|xargs kill -15 ：杀死所有Python进程
echo -e "TZ='Asia/Shanghai'\nexport TZ" >> ~/.bashrc && source ~/.bashrc  修改时区
uptime - 查看系统正常运行的时间
sudo ./startup.sh - 监听80端口需要root权限
bash中的ps1 - 修改终端的高亮，如下命令可以修改为Ubuntu默认的 echo "PS1='\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '" >> ~/.bashrc && source ~/.bashrc
lsblk - 查看磁盘
docker save, docker load - 保存镜像为tar，从tar加载镜像
/etc/ssh/sshd_config - 修改其中的PermitRootLogin yes然后重启ssh服务以允许root使用ssh远程登录
free - 查看可用内存
man netdevice - 配置网络设备的套接字接口
var=$(cmd) or var=`cmd` - shell获取命令输出
dd if=/dev/zero of=/test1.img bs=1G count=1 oflag=dsync - Linux磁盘写入速度测试，  dsync表示使用同步IO
du - 查看文件/夹大小 -- du -sh : 查看当前目录总共占的容量，不单独列出各子项占用的容量 ，du -lh --max-depth=1: 查看当前目录下一级子文件和子目录占用的磁盘容量，du -sh * | sort -n 统计当前文件夹(目录)大小，并按文件大小排序，du -sk filename 查看指定文件大小
df -h - 查看磁盘使用量
bash --- if [[ -d "./tmp" ]];then a=1;else a=2;fi 判断文件是否存在，类似选项有 -x, -f, -n(变量是否为空)
bash --- echo $RANDOM - 生成随机数
bash --- var=$(cmd) or var=`cmd` - shell获取命令输出
setsockopt(sd, SOL_SOCKET, SO_RCVTIMEO, &tv, sizeof tv) - 设置套接字上read recv send sendmsg操作的超时时间
ps -e -o 'pid,comm,args,pcpu,rsz,vsz,stime,user,uid' - 按照指定格式输出，可以用来查看内存使用，也可以通过 /proc/meminfo 文件查看
shell: read a - 输入回车后读到的是空字符串
tar -xvf file.tar -C dir - 解压到指定文件夹
thread & fork & watipid - 线程内fork后依然可以使用waitpid等待只有一个线程的子进程结束
thread & fork - 多线程中 fork 只会拷贝当前线程，而不是全部进程
syscall(_NR_gettid) - 获取线程ID
backtrace() - execinfo.h的堆栈函数，安装SIGSEGV信号的处理器并打印堆栈，就可以在程序崩溃的时候输出stacktrace （假的）
stat.st_mod & S_IFREG - 使用stat获得文件信息，可以通过S_IFREG判断文件是否为普通文件
access(path, F_OK) - 用来检查文件是否存在(linux)，-1表示不存在。R_OK, W_OK, X_OK检查读写执行权限，可以互相 or
sendfile - 在文件描述符之间传输文件
ldd - 查看可执行文件的共享对象依赖信息（链接库）
off_t 作为文件偏移量 - 文件过大时 int 会溢出，对于大文件，g++的 -D_FILE_OFFSET_BITS=64 能够将off_t定义为64位的
cat /proc/$$/status | egrep 'Cap(Inh|Prm|Eff)' 查看当前进程权限
setcap cap_setuid,cap_setgid+iep a.out 设置文件a.out的权限，e表示effective，p表示permitted，i表示inherited
getcap filename 查看file的权限
unlink /etc/localtime && sudo ln -s /usr/share/zoneinfo/Etc/GMT+8 /etc/localtime 修改时区
fork inside thread: 应当立即执行exec
dup2(oldfd, newfd): 可以用来将STDOUT重定向到其它文件 - dup2(fd, STDOUT_FILENO)
C++Singleton模式：https://stackoverflow.com/questions/1008019/c-singleton-design-pattern
du -sh 命令 查看当前文件夹占用的空间大小
ps -aux 查看所有进程及其内存、CPU等使用
umount -R 可以递归卸载所有设备
docker run -it alpine 指定 -t 选项会分配一个伪终端，不指定时启动会失败